# Nascraft items.yml - ${project.version}

items:
  # Material of the item.
  cobblestone:
    # OPTIONAL: Display name of the item. If not specified, the material (with the first letter capitalized and without underscores) will be displayed.
    alias: 'Cobble'
    # REQUIRED: INITIAL price. This value will be disregarded once the market begins to establish its own valuations.
    initial-price: 0.05
    # OPTIONAL: You can have a support level, a resistance level, or both for each item.
    # In this example, the item will fluctuate randomly between 0,3 - 2 and will try to go again to this range
    # when the price deviates due to player actions.
    support: 0.01
    resistance: 0.1
    # OPTIONAL: The elasticity determines the item's predisposition to react to changes in stock.
    # With lower values items will require more interactions to change, and with higher values items will change more easily.
    # This is especially useful with common objects such as cobblestone. At lower elasticity, players will have to sell/buy much more to influence the price.
    elasticity: 0.45
    # OPTIONAL: The intensity of the noise determines the magnitude of the random fluctuations.
    noise-intensity: 1.4
    # OPTIONAL: Child items. The price of these items will be determined by their parent item.
    child:
      cobblestone_slab:
        # To make a cobblestone slab we only need half of a cobblestone block, so the price of the slab is half the price of the cobblestone.
        # Therefore, the initial price will be 0.5 times the price of cobblestone, resulting in 0.05*0.5 = 0.025 for one slab in this example.
        multiplier: 0.5
      cobblestone_stairs:
        # To make a cobblestone stair, we require six blocks of cobblestone, but we only get four stairs.
        # Therefore, the price will be 6/4 = 3/2 = 1.5 times the price of cobblestone.
        #
        # NOTE: Keep in mind that this logic is not necessary, as you could choose to set the price of a stair as ten times the price of cobblestone.
        # However, this would not make sense and would likely allow people to take advantage of the overvaluation.
        multiplier: 1.5
      cobblestone_wall:
        # Spends 6, gets 6. Therefore, the ratio is 6/6 = 1/1 = 1.
        multiplier: 1
  stone:
    initial-price: 0.1
    support: 0.05
    elasticity: 0.5
    child:
      stone_stairs:
        multiplier: 1.5
      stone_slab:
        multiplier: 0.5
      stone_pressure_plate:
        multiplier: 2
      stone_button:
        multiplier: 1
  andesite:
    initial-price: 0.1
    elasticity: 0.8
  diorite:
    initial-price: 0.1
    elasticity: 0.8
  granite:
    initial-price: 0.1
    elasticity: 0.8

  cobbled_deepslate:
    initial-price: 0.1
    elasticity: 0.6
    alias: 'Deep cobble'
    child:
      cobbled_deepslate_stairs:
        multiplier: 1.5
      cobbled_deepslate_slab:
        multiplier: 0.5
      cobbled_deepslate_wall:
        multiplier: 1
  deepslate:
    initial-price: 0.1
    elasticity: 0.6
  obsidian:
    initial-price: 350
    support: 100
  amethyst_shard:
    initial-price: 50
  sculk:
    initial-price: 50

  basalt:
    initial-price: 0.5
  blackstone:
    initial-price: 0.5
  ghast_tear:
    initial-price: 1000
  blaze_rod:
    initial-price: 250
  glowstone_dust:
    initial-price: 25
  nether_wart:
    initial-price: 80
  magma_cream:
    initial-price: 25
  quartz:
    initial-price: 50
  soul_sand:
    initial-price: 5

  end_stone:
    initial-price: 8
  purpur_block:
    initial-price: 20
  shulker_shell:
    initial-price: 15000
    elasticity: 2
    noise-intensity: 0.5
  ender_pearl:
    initial-price: 100
  chorus_fruit:
    initial-price: 100

  sand:
    initial-price: 0.5
  prismarine_shard:
    initial-price: 10
  prismarine_crystals:
    initial-price: 15
  ink_sac:
    initial-price: 100
  glow_ink_sac:
    initial-price: 500
  cooked_cod:
    initial-price: 10

  redstone:
    initial-price: 2
    child:
      redstone_block:
        multiplier: 9
  hopper:
    initial-price: 500
  redstone_lamp:
    initial-price: 100
  tnt:
    initial-price: 500
  piston:
    initial-price: 90
  dispenser:
    initial-price: 100
  sculk_sensor:
    initial-price: 40

  oak_log:
    initial-price: 1
    child:
      oak_planks:
        multiplier: 0.25
      oak_stairs:
        multiplier: 0.375
      oak_slab:
        multiplier: 0.125
      stick:
        multiplier: 0.0625
  birch_log:
    initial-price: 1
    child:
      birch_planks:
        multiplier: 0.25
      birch_stairs:
        multiplier: 0.375
      birch_slab:
        multiplier: 0.125
      stick:
        multiplier: 0.0625
  spruce_log:
    initial-price: 1
  jungle_log:
    initial-price: 1
  acacia_log:
    initial-price: 1
  dark_oak_log:
    initial-price: 1
  mangrove_log:
    initial-price: 1
  cherry_log:
    initial-price: 1

  diamond:
    initial-price: 800
    resistance: 1000
    support: 150
  emerald:
    initial-price: 50
    resistance: 100
    support: 10
  nether_star:
    initial-price: 15000
    support: 5000
    elasticity: 5
    noise-intensity: 0.5

  name_tag:
    initial-price: 5000
    elasticity: 3
    noise-intensity: 0.5
  totem_of_undying:
    initial-price: 8000
    elasticity: 1.5
    noise-intensity: 0.5
  leather:
    initial-price: 5
  golden_apple:
    initial-price: 50
  slime_ball:
    support: 50
    initial-price: 150
  gunpowder:
    initial-price: 50

  coal:
    initial-price: 4
    child:
      charcoal:
        multiplier: 1
  dried_kelp_block:
    initial-price: 75

  iron_ingot:
    initial-price: 10
  copper_ingot:
    initial-price: 5
  gold_ingot:
    initial-price: 50
  netherite_ingot:
    support: 5000
    initial-price: 10000
    elasticity: 3
    noise-intensity: 0.5
  brick:
    initial-price: 50
  nether_brick:
    initial-price: 5

  apple:
    initial-price: 15
  carrot:
    initial-price: 1
  potato:
    initial-price: 0.8
  wheat:
    initial-price: 0.8
  honey_bottle:
    initial-price: 80