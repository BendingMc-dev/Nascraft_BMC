# Nascraft config - 1.2.1

# Verify whether the required layout is present (and in the correct version), and if it is not, place it in the layout folder of AdvancedGUI.
AutoResourcesInjection: true

Items_quoted:
  Categories:
    # Reference of the category. Categories are displayed in the main menu.
    1:
      # Display name of the category (cannot be very long).
      name: "Stone age"
      # Items within the category. A maximum of six (6) items are allowed per category.
      items:
        # Material of the item.
        cobblestone:
          # OPTIONAL: Display name of the item. If not specified, the material (with the first letter capitalized and without underscores) will be displayed.
          alias: "Cobble"
          # REQUIRED: INITIAL price. This value will be disregarded once the market begins to establish its own valuations.
          initial_price: 1.2
          # OPTIONAL: You can have a support level, a resistance level, or both for each item.
          # In this example, the item will fluctuate randomly between 0,3 - 2 and will try to go again to this range
          # when the price deviates due to player actions.
          support: 0.8
          resistance: 2
          # OPTIONAL: The elasticity determines the item's predisposition to react to changes in stock.
          elasticity: 0.65
          # OPTIONAL: The intensity of the noise determines the magnitude of the random fluctuations.
          noise_intensity: 1.4
          # Child items. The price of these items will be determined by their parent item.
          child:
            cobblestone_slab:
              # To make a cobblestone slab we only need half of a cobblestone block, so the price of the slab is half the price of the cobblestone.
              # Therefore, the initial price will be 0.5 times the price of cobblestone, resulting in 0.6 for one slab in this example.
              multiplier: 0.5
            cobblestone_stairs:
              # To make a cobblestone stair, we require six cobblestones, but we only get four stairs.
              # Therefore, the price will be 6/4 = 3/2 = 1.5 times the price of cobblestone.
              #
              # NOTE: Keep in mind that this logic is not necessary, as you could choose to set the price of a stair as ten times the price of cobblestone.
              # However, this would not make sense and would likely allow people to take advantage of the overvaluation.
              multiplier: 1.5
            cobblestone_wall:
              # Spends 6, gets 6. Therefore, the ratio is 6/6 = 1/1 = 1.
              multiplier: 1
        stone:
          initial_price: 1.5
          support: 0.9
          elasticity: 0.3
          child:
            stone_stairs:
              multiplier: 1.5
            stone_slab:
              multiplier: 0.5
            stone_pressure_plate:
              multiplier: 2
            stone_button:
              multiplier: 1
        cobbled_deepslate:
          initial_price: 0.7
          child:
            cobbled_deepslate_stairs:
              multiplier: 1.5
            cobbled_deepslate_slab:
              multiplier: 0.5
            cobbled_deepslate_wall:
              multiplier: 1
    # Another category.
    2:
      name: "Tech"
      items:
        redstone:
          initial_price: 2
          child:
            redstone_block:
              multiplier: 9
        redstone_torch:
          initial_price: 3
        repeater:
          initial_price: 6
        comparator:
          initial_price: 10
        piston:
          initial_price: 9
        observer:
          initial_price: 8
    3:
      name: "In the woods"
      items:
        oak_log:
          initial_price: 1
          child:
            oak_planks:
              multiplier: 0.25
            oak_stairs:
              multiplier: 0.375
            oak_slab:
              multiplier: 0.125
            stick:
              multiplier: 0.0625
        birch_log:
          initial_price: 1
          child:
            birch_planks:
              multiplier: 0.25
            birch_stairs:
              multiplier: 0.375
            birch_slab:
              multiplier: 0.125
            stick:
              multiplier: 0.0625
    4:
      name: "Valuables"
      items:
        diamond:
          initial_price: 100
          resistance: 300
        emerald:
          initial_price: 50
          resistance: 100
          support: 30
        raw_gold:
          initial_price: 20
    5:
      name: "Utils"
      items:
        coal:
          initial_price: 4
          child:
            charcoal:
              multiplier: 1
        leather:
          initial_price: 10
    6:
      name: "Ingots"
      items:
        iron_ingot:
          initial_price: 4
        copper_ingot:
          initial_price: 3
        gold_ingot:
          initial_price: 10
        netherite_ingot:
          initial_price: 500

Price_options:
  # Set limits on the minimum and maximum prices.
  limits:
    low: 0.05
    high: 9999
  # With noise enabled, prices will vary over time in a pseudo-random manner.
  noise:
    enabled: true

Market_control:
  # Although taxation is separated for buying and selling actions separately, the total tax paid is the same regardless of how it is split
  # The spread is determined by the deviation in both actions. In the default case, it is 6% for selling and 4% for buying, resulting in a total spread of 10%.

  # To avoid strengthening the underground economy, try to keep the taxation as low as possible.
  # Heavy taxation can encourage players to trade with each other directly, bypassing intermediaries,
  # and reducing the amount of money collected from taxes and making the market less efficient.
  taxation:
    # 6% taxation when players sell items.
    sell: 0.06
    # 4% taxation when players buy items.
    buy: 0.04
  # Do players need the permission "nascraft.market" to operate directly with commands?
  market_permission: true

Lang:
  # Specify the currency to be used next to prices.
  currency: "â‚¬"

  # LAYOUT TEXTS:
  # Main title.
  title: "Item Market"
  # Available placeholders: [AMOUNT], [MATERIAL], [WORTH]
  buy_message: "&7You just bought &d[AMOUNT] &7x &d[MATERIAL] &7worth &6[WORTH]"
  sell_message: "&7You just sold &d[AMOUNT] &7x &d[MATERIAL] &7worth &6[WORTH]"
  # More text:
  topmovers: "Top Movers"
  subtop: "in the last 30 min"
  buy: "Buy"
  sell: "Sell"
  price: "Price:"
  amount_selection: "Select amount:"
  trend: "Trend:"